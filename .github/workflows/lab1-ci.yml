name: Lab 1 Pipeline

on:
  pull_request:
    branches:
      - trunk
      - lab1
  push:
    branches:
      - lab1

jobs:
  # Format and Lint the code with clang-format and clang-tidy
  format-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-format clang-tidy

      - name: Generate compile_commands.json
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          cd ..

      - name: Format code with clang-format
        run: |
          find ./source ./test -name '*.cpp' -o -name '*.hpp' | xargs clang-format -i

      - name: Verify clang-format
        run: |
          if ! clang-format --dry-run --Werror $(find ./source ./test -name '*.cpp' -o -name '*.hpp'); then
            echo "Code is not properly formatted!"
            exit 1
          fi

      - name: Run clang-tidy on ./source
        run: |
          clang-tidy $(find ./source -name '*.cpp' -o -name '*.hpp') -p build -- -std=c++17 || echo "clang-tidy finished with warnings/errors"

  # Build and Test on Windows
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - run: |
          mkdir build
          cd build
          cmake -G Ninja ..
      - run: |
          cmake --build build
      # TODO add test phase