name: Lab 1 Pipeline

on:
  pull_request:
    branches:
      - trunk
      - lab1
  push:
    branches:
      - lab1

jobs:
  # Format and Lint the code with clang-format and clang-tidy
  format-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-format clang-tidy

      - name: Generate compile_commands.json
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          cd ..

      - name: Format code with clang-format
        run: |
          find ./source ./test -name '*.cpp' -o -name '*.hpp' | xargs clang-format -i

      - name: Verify clang-format
        run: |
          if ! clang-format --dry-run --Werror $(find ./source ./test -name '*.cpp' -o -name '*.hpp'); then
            echo "Code is not properly formatted!"
            exit 1
          fi

      - name: Run clang-tidy on ./source
        run: |
          clang-tidy $(find ./source -name '*.cpp' -o -name '*.hpp') -p build -- -std=c++17 || echo "clang-tidy finished with warnings/errors"

  # Build and Test on Windows
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install LLVM and Clang
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/LLVM-14.0.6-win64.exe" -OutFile "llvm-installer.exe"
          Start-Process -FilePath "llvm-installer.exe" -ArgumentList "/S" -Wait
          $env:Path += ";C:\Program Files\LLVM\bin"

      - name: Verify Clang installation
        run: clang --version

      - name: Install Ninja
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip" -OutFile "ninja.zip"
          Expand-Archive -Path ninja.zip -DestinationPath "C:\\ninja"
          $env:Path += ";C:\\ninja"

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure CMake
        run: |
          cmake -S . -B build -G "Ninja" `
          -DCMAKE_C_COMPILER=clang `
          -DCMAKE_CXX_COMPILER=clang++ `
          -DCMAKE_MAKE_PROGRAM=C:/ninja/ninja.exe

      - name: Build the project
        run: cmake --build build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
